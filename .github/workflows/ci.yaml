name: Naviora FE CI Pipeline

on:
  push:
    branches: ['**'] # Run on all branches for push
  pull_request:
    branches: ['**'] # Run on all branches for PR

env:
  NODE_VERSION: 22
  REGISTRY: docker.io
  PROD_IMAGE_NAME: hoanghuynguyen/naviora-system-fe
  NON_PROD_IMAGE_NAME: hoanghuynguyen/naviora-system-fe-dev

jobs:
  # Code Quality and Build Verification Job
  quality-check:
    name: Code Quality & Build Check
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for better analysis

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm' # Enable npm caching

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Check code formatting
        run: npm run format

      - name: Run ESLint
        run: npm run lint

      - name: Type checking
        run: npm run type-check

      - name: Build application
        run: npm run build

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            .next/
            node_modules/
          key: build-${{ runner.os }}-${{ hashFiles('package-lock.json') }}-${{ github.sha }}
          restore-keys: |
            build-${{ runner.os }}-${{ hashFiles('package-lock.json') }}-

  # Production Docker Build and Push Job (only runs on main branch)
  docker-build-prod:
    name: Docker Build & Push (Production)
    runs-on: ubuntu-24.04
    needs: quality-check
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for production
        id: meta-prod
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.PROD_IMAGE_NAME }}
          tags: |
            type=raw,value=latest

      - name: Build and push production Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-prod.outputs.tags }}
          labels: ${{ steps.meta-prod.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: production

  # Non-Production Docker Build and Push Job (runs on all other branches)
  docker-build-dev:
    name: Docker Build & Push (Development)
    runs-on: ubuntu-24.04
    needs: quality-check
    if: github.ref != 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for development
        id: meta-dev
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.NON_PROD_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr

      - name: Build and push development Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-dev.outputs.tags }}
          labels: ${{ steps.meta-dev.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: development
